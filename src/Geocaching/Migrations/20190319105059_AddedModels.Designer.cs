// <auto-generated />
using System;
using Geocaching;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geocaching.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190319105059_AddedModels")]
    partial class AddedModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Geocaching.Models.FoundGeocache", b =>
                {
                    b.Property<int>("PersonID");

                    b.Property<int>("GeocacheID");

                    b.HasKey("PersonID", "GeocacheID");

                    b.HasIndex("GeocacheID");

                    b.ToTable("FoundGeocache");
                });

            modelBuilder.Entity("Geocaching.Models.Geocache", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contents");

                    b.Property<float>("Latitude");

                    b.Property<float>("Longitude");

                    b.Property<string>("Message");

                    b.Property<int?>("PersonID");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.ToTable("Geocache");
                });

            modelBuilder.Entity("Geocaching.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<float>("Latitude");

                    b.Property<float>("Longitude");

                    b.Property<string>("StreetName");

                    b.Property<short>("StreetNumber");

                    b.HasKey("ID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Geocaching.Models.FoundGeocache", b =>
                {
                    b.HasOne("Geocaching.Models.Geocache", "Geocache")
                        .WithMany("FoundGeocaches")
                        .HasForeignKey("GeocacheID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Geocaching.Models.Person", "Person")
                        .WithMany("FoundGeocaches")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Geocaching.Models.Geocache", b =>
                {
                    b.HasOne("Geocaching.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");
                });
#pragma warning restore 612, 618
        }
    }
}
